/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

DROP DATABASE IF EXISTS study_buddy_db;
CREATE DATABASE study_buddy_db;
USE study_buddy_db;

--
-- Table structure for table `flash_cards`
--

DROP TABLE IF EXISTS `flash_cards`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `flash_cards` (
  `id` int NOT NULL AUTO_INCREMENT,
  `term` varchar(255) DEFAULT NULL,
  `definition` varchar(1000) DEFAULT NULL,
  `q_type` int DEFAULT NULL,
  `set_id` int DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=171 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `flash_cards`
--

LOCK TABLES `flash_cards` WRITE;
/*!40000 ALTER TABLE `flash_cards` DISABLE KEYS */;
INSERT INTO `flash_cards` VALUES (1,'Abacus','This is considered to be the first calculating device. The Chinese developed it in the year 2600 B.C.',1,1),(2,'John Napier','He developed \"Napier\'s Rods.\" It was a calculator made from rods. It allowed people to multiply numbers faster.',1,1),(3,'Blaise Pascal','He was a mathematician who developed the \"Pascaline.\" This was the first mechanical adding machine. The Pascaline was a wooden box that could add and subtract by using a series of gears and wheels.',1,1),(4,'Joseph Jacquard','He developed a weaving machine that was controlled by punch cards. This invention led to the method of storing information by using punch cards.',1,1),(5,'Herman Hollerith','He invented the \"Tabulating Machine.\" The Tabulating Machine used punch cards to store information. It was later used to tabulate the U.S. Census.',1,1),(6,'Charles Babbage','He is known as the \"Father of Computers.\" He developed the Difference Engine and the Analytical Engine. These two machines were powered by steam to move the punch cards and operate the gears. His ideas were later used to design calculators and computers.',1,1),(7,'Bill Gates','He created the computer language known as \"Windows.\" He also made the Personal Computer (PC) popular by bringing it over from Japan.',1,1),(8,'Steve Jobs','along with Stephen Wozniak and Ronald founded Apple. Although the company had early success with the Apple and in particular, the Apple II, it was the original Macintosh (1984) that changed things: it was the first computer to have a graphical user interface and mouse rather than a command line interface. He developed the very first Apple in his garage.',1,1),(9,'Alan Turing','was principally a mathematician, most famous for helping break the German\'s Enigma code during World War II at Bletchley Park. He turned to computers to help break codes faster, saving millions of lives in the process and shortening the length of the war.',1,1),(10,'Tommy Flowers','Another member of the Bletchley Park World War II team. He was instrumental in building the world\'s first electronic computer: Colossus. The principle purpose of the machine was to break the Lorenz Cipher, used by high-level Germans, including Adolf Hitler.',1,1),(11,'Douglas Engelbart','he created the mouse (then a wooden shell with two metal wheels in it), still the de facto way that we interact with computers today. He and his team also created bit-mapped screens, hypertext and some precursors to the graphical user interface (GUI).',1,1),(12,'Philip Don Estridge','led the development of the IBM Personal Computer (PC), arguably the most important computer in the history of computers. It\'s the creation of this computer that\'s led to the types of computer that we have today.',1,1),(13,'Gordan Moore','As the founder of Intel, He has helped shape the modern world and create the base technology platform that the majority of the world uses, whether its Linux, Windows or Mac OS X.',1,1),(14,'Tim Berners-Lee','He designed and built the first web browser, created the first web server and, in short, changed the entire world as we know it. We\'re now so reliant on the internet that it\'s impossible to imagine life without the world wide web.',1,1),(15,'The Ladies of ENIAC','Comprised of Kay McNulty, Marlyn Wescoff, Fran Bilas, Ruth Lichterman, Adele Goldstine (and Betty Snyder), these ladies were the first \"computors\" working on ENIAC at the University of Pennsylvania\'s Moore School of Engineering.',1,1),(16,'Jean E. Sammet','She was responsible for developing the first computer language while working at IBM. Her program, FORMAC, was the first widely used computer language for the symbolic manipulation of mathematical formulas.',1,1),(17,'Grace Hopper','was credited with popularizing the term \"bug\" and \"debugging\" - reportedly when she had to remove a moth from the inside of a computer, was instrumental in the creation of FLOW-MATIC language for the UNIVAC I and UNIVAC II computers and was quoted as saying \"It is easier to ask forgiveness than it is to get permission.\"',1,1),(18,'Ada Lovelace','She is considered to be the first computer programmer. She wrote a computer language for the Analytical Engine.',1,1),(19,'Vacuum Tubes (1940\'s)','They were electronic devices that controlled the flow of electricity in and out of a computer. They looked like long light bulbs.',1,1),(20,'Transistors (1950\'s)','Transistors replaced the use of vacuum tubes. They controlled the flow of electricity in and out of the computer. They were much more reliable than the vacuum tubes.',1,1),(21,'Integrated Circuits (1960\'s)','is a tiny chip that contains thousands of tiny circuits. They are about the size of a fingernail and are made from silicone (hard plastic). They allow electricity to flow throughout the computer.',1,1),(22,'Microprocessors (1970\'s)','were developed by M.E. Hoff. It allowed scientists to put more complex circuits and large memory storage on a very small computer chip.',1,1),(23,'Mark I (1944)','This was the very first electronic computer. It was designed by Howard Aiken and Grace Hopper. It could automatically solve differential equations and prepare mathematical tables.',1,1),(24,'Electronical Numerical Integrator and Computer (ENIAC)','This was the first all-electric computer. John Eckert and John Mauchly developed it in 1946. It was very large and consumed a large amount of electricity. It was not used after 1955.',1,1),(25,'Electronic Discrete Variable Computer (EDVAC)','John Von Neumann developed the EDVAC. It was one of the first computers to use memory to store programs and data.',1,1),(26,'1st Generation of Computers (Vacuum Tubes)','Mark I - ENIAC - EDVAC',1,1),(27,'2nd Generation of Computers (Transistors)','IBM - NCR - RCA - UNIVAC',1,1),(28,'3rd Generation of Computers (Integrated Circuits)','Mainframe and Minicomputer',1,1),(29,'4th Generation of Computers (Microprocessor (CPU)','Microcomputers',1,1),(30,'5th Generation of Computers (Microprocessor and AI)','Microcomputers and\nbeyond',1,1),(31,'League of Nations','A vision of a world parliament where all the countries in the world discuss the world\'s issues.',1,2),(32,'Collective security','Where several countries work together so they can strengthen each other\'s security.',1,2),(33,'Permanent Court of International Justice','Where several countries work together so they can strengthen their security by discussion.',1,2),(34,'Mitigation','Where two or more countries have a disagreement and the case was brought before the whole of the League of Nations so that it could be resolved through discussion.',1,2),(35,'Moral condemnation','Where several countries would issue warnings to a country that had broken the Covenant of the League of Nations.',1,2),(36,'Economic sanctions','These sanctions were the last resort for the League when a country had broken one of the rules of the Covenant. It usually consisted of trade tariffs and restrictions and was made effective by the number of countries in the League.',1,2),(37,'What were the aims of the League of Nations?','1. To stop war\n2. Encourage disarmament\n3. Improve working conditions\n4. Reduce disease',1,2),(38,'Fontainebleau Memorandum','A document written by David Lloyd George during the Paris Peace Conference that declared his support behind the idea of the League of Nations.',1,2),(39,'The Assembly','Every member sent representatives to the Assembly and decisions had to be unanimous. If it wasn\'t, the decision was sent to the council. It was a world parliament.',1,2),(40,'The Council','The council met more frequently than the Assembly and could respond more quickly. They had a veto on any decision made by the assembly and elected non-permanent members every three years.',1,2),(41,'Secretariat','The civil service of the League of Nations. They did all the administrative work.',1,2),(42,'Agencies and special commissions','Special groups were put together to tackle issues of concern.',1,2),(43,'Structural strengths of the League of Nations','1. It had vast membership which made punishments like moral condemnation and economic sanctions more effective.\n2. The council was able to make some quick decisions\n3. Victorious nations had agreed and recognised its creation - suggesting that it had international respect.',1,2),(44,'Structural weaknesses of the League of Nations','1. The League had no army, that meant it could not force people to obey it. Therefore, its power was limited.\n2. Not all countries had equal rights and this caused tension\n3. The structure was very complicated and confused people. It also slowed down proceedings.',1,2),(45,'International Labour Organisation','To bring workers, employers and governments together to improve the conditions that people worked in.',1,2),(46,'Commission for Refugees','To return prisoners of war home and support refugees by improving camp conditions, finding new homes, or returning them to their own countries once the threat of conflict had passed.',1,2),(47,'Health Committee','To reduce disease worldwide.',1,2),(48,'Economic and Financial Committee','To find a solution to monetary problems and facilitate the circulation of goods and funds.',1,2),(49,'Permanent Central Opium Board','To stop the cultivation and distribution of opium.',1,2),(50,'Slavery Commission','Abolish slavery worldwide.',1,2),(51,'Organisation for Communications and Transport','Regulated transport developed during the war in order to keep people safe.',1,2),(52,'Aland Islands Crisis of 1921','Sweden and Finland claimed the Aland Islands and threatened war. The League investigated and said they should be given to Finland. It was a success as neither side declared war.',1,2),(53,'Vilna Crisis of 1920','Vilna was set to become the capital of the new state of Lithuania however people in the city identified as Polish. The Polish Army took the city and the League asked them to remove it. Poland refused. France refused to help as it was an ally of Poland and Britain would not intervene as no other country would support it. It was a failure as the League did nothing to stop Poland from going to war.',1,2),(54,'Bulgaria Crisis of 1925','Greek soldiers were killed on the Bulgarian border so Greece invaded Bulgaria. Bulgaria appealed to the League for help and the League condemned Greece and demanded that it withdraw its troops. Greece obeyed and it was therefore a success as war was prevented.',1,2),(55,'Corfu Crisis of 1923','An Italian General was visiting the island when he and his team were assassinated. Mussolini invaded Corfu as the League did nothing. Greece paid compensation. This was a failure as the League was undermined by other organisations.',1,2),(56,'Upper Silesia Crisis of 1921-25','Germany and Poland wanted to claim this area for their own. A plebiscite was enforced by Britain and France which was won by Germany. Poland complained and so the League split the industrial zones to Poland and the rural zones to Germany. Neither side was happy and this was not resolved by the League. Therefore, this was a failure as it exacerbated tensions between Germany and Poland.',1,2),(57,'Locarno Treaties (1925)','1. It invited many European countries, including Germany and the USSR into the League.\n2. France, Belgium and Germany promised not to invade each other.\n3. Many countries including Germany agreed to uphold the terms of the Treaty of Versailles.',1,2),(58,'Why were the Locarno Treaties successful?','1. They represented the peace process in Germany and how they now support the Treaty of Versailles\n2. It allowed Germany into the League, showing they wanted to be a peaceful country again.',1,2),(59,'Why were the Locarno Treaties a failure?','1. The League had nothing to do with the Treaties, showing that they were ignored by larger powers, undermining them.\n2. The peace agreement should have been enforced by the League of Nations across all of its members.',1,2),(60,'Kellogg-Briand Pact (1928)','65 countries including Germany, France and the USA signed a treaty to say that war was not a way of resolving international disputes. It seemed like a triumph of pacifism and common sense.',1,2),(61,'Why was the Kellogg-Briand Pact successful?','1. Furthered the League\'s aims to encourage global peace and disarmament.\n2. Improved relations between countries temporarily.',1,2),(62,'Why was the Kellogg-Briand Pact a failure?','1. The Pact took place outside of the League so it undermined the belief in collective security.\n2. No sanctions were introduced as a result of breaking the pact.',1,2),(63,'Why did Japan want Manchuria?','1. Natural resources\n2. Annoy the Russians\n3. Chinese government is weak\n4. Japanese industry is there\n5. Geographically close\n6. Kwantung army are there already\n7. Backing of the generals in government',1,2),(64,'Why did Mussolini want Abyssinia?','1. It would distract from the economic problems at home caused by the depression\n2. Provide cheap land for Italian settlers\n3. Connect various Italian colonies together',1,2),(65,'What was the cause for Mussolini starting his invasion?','There was a clash between Italian and Abyssinian troops near the Wal Wal oasis in December 1934. Mussolini blamed the Abyssinians. He invaded in October 1935.',1,2),(66,'Why didn\'t France and Britain punish Italy more harshly\n for the Abyssinian crisis?','They needed Italy\'s support against Hitler. Furthermore, they couldn\'t place economic sanctions due to the depression as it would cripple their own economies.',1,2),(67,'What was the Hoare-Laval pact?','A secret deal between Italy, France and Britain that would have given Mussolini most of Abyssinia in return for peace. It was leaked by the French press and the public in both countries were in uproar.',1,2),(68,'What could France and Britain have done to stop the Italian invasion?','They could have established an embargo on oil, needed for the war effort. They could also have closed the Suez canal, which Mussolini was transporting his troops through.',1,2),(69,'How did the Abyssinian crisis weaken the League?','1. The methods the British and French used showed that the League could be ignored, even by a permanent member.\n2. It weakened the diplomatic relations between Britain, France and Italy\n3. Let Hitler re militarise the Rhineland while nobody was paying attention\n4. Italy\'s isolation allowed Germany to extend its friendship, leaving the way clear for Anschluss.',1,2),(70,'The Ruhr valley invasion','When Germany couldn\'t pay its reparations, France and Belgium invaded to take the money from factories in the Ruhr valley. When they arrived, the workers were paid by the German government to go on strike, meaning the French couldn\'t take anything. The German government had to print money to achieve this and this led to hyperinflation a few years later.',1,2),(71,'September 1931','Japan claims Chinese soldiers sabotaged the Japanese railway in Manchuria. They subsequently invaded.',1,2),(72,'February 1932','Japan sets up puppet government in Manchuria which was led by Pu Yi who was easily controlled by the military. The province was renamed Manchukuo.',1,2),(73,'Later in 1932','Japan sent aeroplanes and gunships to bomb Shanghai. The Japanese government told the military to stop but it was ignored.',1,2),(74,'September 1932','The League published a report a year after the initial invasion that made clear the fact that Japan had acted unlawfully. It said Manchuria should be returned to the Chinese.',1,2),(75,'February 1933','Japan announces that it will invade more of China. On 24th of February the League\'s report is approved by 42 votes to 1. Only Japan voted against it.',1,2),(76,'27th March 1933','Japan resigns from the League of Nations. It invaded Jehol a week later.',1,2),(77,'Problems of tackling the situation','1. The US, Japan\'s biggest trading partner, was outside the League\n2. Large countries like the USSR weren\'t in the League so it would be difficult to mobilise troops\n3. Most of the members of the League were in Europe and they felt it wasn\'t their problem\n4. Japan was a permanent member of the council and could veto any proposal to stop the invasion of Manchuria',1,2),(78,'Why was the League reluctant to act?','1. Britain and France were suffering from the Depression\n2. Japan was powerful\n3. Europe wasn\'t concerned\n4. League didn\'t want a big war\n5. Sanctions didn\'t work\n6. Japan owned much of Manchuria anyway\n7. USSR couldn\'t help',1,2),(79,'Why is building a distributed system hard?','Naming, lack of global knowledge, synchronization, event ordering, and faults',1,3),(80,'Pros of distributed system vs. mainframe?','- microprocessors offer better price/performance\n- more scalable => more computing power\n- inherent distribution\n- reliability, incremental growth',1,3),(81,'Pros of distributed system vs. independent computer/devices?','- some application require sharing of date\n- sharing of hardware\n- easier human to human communication\n- spread the workload over the machines in the most effective way',1,3),(82,'Cons of distributed system?','lack of software, coordination, management, security is harder',1,3),(83,'What is a failstop?','- processor fails by halting\n- the face that a processor has failed is detectable by other processors',1,3),(84,'What is a crash?','- processor fails by halting\n- the face that a processor has failed may not be detectable by other processors',1,3),(85,'What is byzantine failures?','processor fails by exhibiting arbitrary behavior',1,3),(86,'What are the corresponding network versions of failstop, crash, and byzantine failures?','- failstop = dropped message\n- crash = message that is delayed for an arbitrarily long time\n- byzantine = a corrupted message',1,3),(87,'Why is lack of global knowledge a problem for distributed systems?','- cannot solve the consensus problem in the face of 1 node failure for asynchronous systems. straightforward if no failures are possible or the system is synchronous (i.e. communication happens in well-determined rounds)\n- cannot solve the coordinated attack problem if messages can be lost. trivial problem if messages cannot be lost',1,3),(88,'What is the coordinated attack problem?','- two division need to attack castle at some time but only way to communicate is through messenger that take 1 hour to get to the other division. How long will it take them to coordinate the attack?\n- problem is that if division A sends message to attack at 5pm, division B will get the message but how will A know B got it so then B must sent an Ack to A but how does B know that A got the Ack and so on\n- answer: Never',1,3),(89,'Types of networks?','- Local-area network (LAN)\n- Wide-area network (WAN) - collection of interconnected networks across administrative domains\n- System-area networks (SAN)',1,3),(90,'Why is it so complicated to send a message if basic message passing is so easy? (i.e. send then receive)','Issues include:\n- Naming: How to specify the receiver?\n- Routing: How to forward the message to the correct receiver through intermediaries?\n- Buffering: What if the out port is not available? What if the receiver is not read to receive the message?\n- Reliability: What if the message is lost in transit? What if the message is corrupted in transit?\n- Blocking: What if the receiver is ready to receive before the sender is ready to send?',1,3),(91,'What are communication abstractions?','- byte stream\n- datagrams\n- shared memory\n- remote procedure call',1,3),(92,'What is a byte stream and its aspects?','- No cardinality, i.e. cannot go directly to the Nth byte, must read all bytes in FIFO order\n- OS can \"break\" groups of bytes into read and writes in whatever grouping is most convenient\n-',1,3),(93,'What is a datagram and its aspects?','- a byte array\n- OS cannot \"break\" a datagram into parts w/o reassembling it for the user\n- either entire datagram/packet is received or none of it is',1,3),(94,'Ordered datagram vs unordered datagram','ordered datagram always received in the order of write() calls, OS is free to re-order for unordered datagrams',1,3),(95,'Reliable datagram vs unreliable datagram?','- unreliable: OS can \"throw away\" entire datagram if it gets into trouble (i.e. no more buffers, or the network lost it)\n- reliable: OS will deliver complete datagram under many adverse condition',1,3),(96,'What is shared memory and it aspects?','- two or more, processes share a byte buffer\n- byte buffer is least common denominator (i.e. single data type, no methods, no object hierarchy, no exceptions)\n- difficult to preserve memory abstraction across a network',1,3),(97,'What is remote procedure call (RPC) and its aspects?','- map communication to a method call\n- method invocation on one process (caller) mapped by OS into a call on another process (callee)',1,3),(98,'What are the issues with remote procedure call (RPC)?','- parameter passing\n- What if processes written in different language?\n- What if callee crashes or is disconnected during call?',1,3),(99,'A DNS maps names to IP addresses','remus.rutgers.edu -> 128.6.13.3',1,3),(100,'Internet protocol stack','Application\nTransport\nNetwork\nData Link\nPhysical',1,3),(101,'OSI protocol stack','Application \nPresentation\nSession\nTransport\nNetwork\nData Link\nPhysical',1,3),(102,'Application layer','- Application to application communication\n- supports application functionality\ni.e. file transfer protocol \n- User can add other protocols, for example a distributed shared memory protocol',1,3),(103,'Transport Layer','-End to end communication\n- no applications semantics - only process to process\n- TCP and UDP',1,3),(104,'Network Layer','- Host to host\n- potentially across multiple networks\nEx.\n- internet protocol\n- understand the host address\n- responsible for packet delivery \n- provides routing function across the network\n- but can lose or misorder packets',1,3),(105,'Data Link/Physical Layer','- comes from the underlying network\n- Physical layer: transmits 0s and 1s over the wire\n- Data link layer: groups bits into frames and does error control using checksum + retransmission\nEx.\n- ethernet',1,3),(106,'Remote Procedure Call','-transports protocols such as TCP/UDP provide un-interpreted messaging\n- difficult to use this abstraction for distributed computing',1,3),(107,'Why RPC?','- procedure call is an accepted and well-understood mechanism for control transfer within a program \n- providing procedure call semantics for distributed computing makes distributed computing much more like programing on a single machine\n- Abstraction helps to hide: \n- the possibility heterogeneous nature of the hardware\n- the fact that the distributed machines do not share memory',1,3),(108,'Advantages of RPC?','- don\'t have to worry about getting a unique transport address\n- system is transport independent\n- application on the client only need to know one transport address\n- function-call interface can be used instead of the send/receive (read/write) interface provided by sockets',1,3),(109,'ACID properties?','- atomic: each transaction either occurs completely or not at all \n- consistent: when executed alone and to completion, a transaction preserves whatever invariants have been defined for the system state\n- isolated: any set of transactions is serializable\n- durable: effects of committed transactions should survive subsequent failures',1,3),(110,'Protocol Architecture','- to communicate, computers must agree on the syntax and the semantics of communication\n- really hard to implement a reliable communication protocol on top of a network substrate, where packets may be lost or reordered\n- common approach: protocol functionality is distributed in multiple layers. Layers N provides services to layer N+1 and relies on services of layer N-1\n- communication is achieved by having similar layers at both end points which understand each other',1,3),(111,'Circuit Switching','- Ex. use of telephones\n- resources are reserved and dedicated during the connection\n- fixed path between peers for the duration of the connection',1,3),(112,'Packet Swithcing','- Ex. internet\n- entering data are divided into packets\n- packets in network share resources and may take different paths to the destination',1,3),(113,'Virtual circuits','- cross between circuit and packet switching\n- resources are reserved to a logical connection, but are not dedicated to the connection\n- fixed path between peers for the duration of the connection',1,3),(114,'Datagrams','- path for each message is chosen only when the message is sent or received at an intermediate host\n- separate messages may take different paths through the network\n- a datagram is broken into one or more packets for physical transmission',1,3),(115,'Addresses','- unique 32-bit address for each host\n- four address formats: class A (large nets), class B (medium nets), class C (small nets), and class D (multicast)',1,3),(116,'IP to physical address translation','- each host only recognizes the physical address of its network interfaces\n- Address Resolution Protocol (ARP) to obtain translation from IP to physical address\n- each host caches a list of IP-to-physical translations which expires after a while',1,3),(117,'Address Resolution Protocol (ARP)','- translates from IP to physical addresses',1,3),(118,'How does ARP work?','- a host broadcasts (on a LAN) a query packet asking for a translation for some IP addresses\n- Hosts which know the translation reply\n- Each host knows its own IP and physical translation',1,3),(119,'Reverse ARP (RARP)','- translates physical to IP address and it is used to assign IP addresses dynamically\n- had been replaced by the Dynamic Host Configuration Protocol (DHCP)',1,3),(120,'IP Packet','- IP transmits data in variable size chunks: datagrams\n- may drop, reorder, or duplicate datagrams\n- each network has a Maximum Transmission Unit (MTU), which is the largest packet it can carry\n- if packet is bigger than MTU it is broken into fragments which are reassembled at destination',1,3),(121,'IP Routing','- each host has a routing table which tells it where to forward packets for each network, including a default router',1,3),(122,'User Datagram Protocol (UDP)','- connectionless\n- unreliable, unordered datagrams\n- UDP sends datagrams between processes identified as (host, port) pairs',1,3),(123,'Transmission Control Protocol (TCP)','- connection-oriented\n- reliable; acknowledgment, timeout, and retransmission\n- byte stream delivered in order\n- flow control: slows down sender if receiver overwhelmed\n- congestion control: slows down sender if network overwhelmed',1,3),(124,'TCP: connection setup','- three way handshack\n- client sends a SYN pack: \"I want to connect\"\n- server sends back its SYN + ACK: \"I accept\"\n- client ACKS the server\'s SYN: \"OK\"',1,3),(125,'TCP: reliable communication','- packet can get lost - retransmit when necessary\n- each packet carries a sequence number\n- receiver acknowledges data after receiving them\n- TCP keeps an average round_trip transmission time (RTT)\n- Timeout if no ACK received after twice the estimated RTT and resend data starting from the last ACK',1,3),(126,'Congestion Control','- basic idea: only put packets into the network as fast as they are exiting\n- to maintain high performance, need to have to keep the pipe full',1,3),(127,'Remote Procedure Call (RPC) structure','- stubs make RPCs look \"just\" like normal procedure calls \n- Marshaling & Unmarshaling\n- send/receive messages\n- Client program -> (call) -> client stub -> network -> server stub -> (call) -> server program -> (return) -> server stub -> network -> client stub -> (return) -> client program',1,3),(128,'What is Marshaling & Unmarshaling?','Marshalling is the packing of arguments(or parameters) into a message packet whereas Unmarshalling is the unpacking of arguments(or parameters) received from the call packets',1,3),(129,'RPC Semantics','- global variables are not accessible inside the RPC\n- Call-by-copy/restore for reference-style params; call-by-vale for others\n- Communication errors that may leave client uncertain about whether the call really happened',1,3),(130,'At-least-once','in case of timeouts, keep trying RPC until actually completes',1,3),(131,'At-most-once','try once and report failure after timeout period',1,3),(132,'Exactly-once','ideal but difficult to guarantee; one approach is to use at-least-once semantics and have a cache of previously completed operations on the server side; the cache has to be logged into stable storgae',1,3),(133,'Transactions','- transaction is a mechanism for both synchronization and tolerating failures\n- Isolation -> synchronization\n- Atomicity, durability -> failures',1,3),(134,'Two-Phase Locking','-for isolation, need concurrency control by using locking, or more specially, two-phase locking\n- Read/write locks to protect concurrent data\n- acquire/release locks in two phases \n- locks are acquired when needed, but held until transaction either commits or aborts',1,3),(135,'If deadlock during two-phase locking?','- releasing all acquired locks, waiting a while, and trying again (may cause livelock)',1,3),(136,'If all transactions use two-phase locking what can be proven?','all schedules formed by interleaving them are serializable (I in ACID)',1,3),(137,'3 levels of storage','- volatile: memory\n- nonvolatile: disk\n- stable storage: mirrored disks or RAID',1,3),(138,'4 classes of failures','- transaction abort\n- system crash\n- media crash (stable storage is the solution)\n- catastrophe (no solution)',1,3),(139,'Transaction Abort Recovery','- atomic property of transactions stipulates the undo of any modifications made by a transaction before it aborts\n- two approaches:\n- update-in-plae\n- defered-update',1,3),(140,'Update-in-place','write-ahead log and rollback if aborted',1,3),(141,'Deferred-update','private workspace',1,3),(142,'System Crash Recovery','- maintain a log initiated transaction records, aborts, and commits on nonvolatile (better yet, stable) storage\n- whenever commits a transaction, force description of the transaction to nonvolatile (better yet, stable) storage',1,3),(143,'What happens after a crash?','state can be recovered by reading and undoing the non-committed transactions in the log (from end to beginning)',1,3),(144,'Distributed Recovery','all processes (possibly running on different machines) involved in a transaction must reach a consistent decision on whether to commit or abort',1,3),(145,'Two-Phase Commit','used to guarantee atomicity',1,3),(146,'Two-phase commit, how it works','- Process attempting to perform transaction becomes \"coordinator\"\n- Phase 1: coordinator writes \"prepare\" to log and sends \"prepare\" messages to other processes. Other processes perform operations and write \"ready\" to log (if completed successfully). After that, they send \"ready\" message to coordinator.\n- Phase 2: if all replies are \"ready\", coordinator writes a record of the transaction to the log and sends a \"commit\" message to each of the other processes. Other processes write \"commit\" in their logs and reply with a \"finished\" message.\n- if not all replies are \"ready\", transaction is aborted. Coordinator reflects that in the log and sends \"abort\" message to other processes. Other processes release locks, update their logs, and abort transaction.',1,3),(147,'Problems with transactions','- ACID properties are not always required\n- weaker semantics can improve performance',1,3),(148,'File Service','- implemented by a user/kernel process\n- system may have one or several file servers running at the same time\n- two models:\n- upload/download\n- remote access',1,3),(149,'Upload/download file services','files move between server and clients, few operations, simple, requires storage at client, good if whole file is accessed',1,3),(150,'Remote access file service','files stay at server, rich interface with many operations, less space at client, efficient for small accesses',1,3),(151,'Directory Service','- provides naming usually within a hierarchical file system\n- clients can have the same view or different vies of the file system\n- location transparency\n- location independence',1,3),(152,'stateless server','no client information is kept between requests',1,3),(153,'Aspects of stateless server','- requests are self-contained\n- better fault tolerance\n- open/close at client (fewer msgs)\n- no space reserved for tables\n- thus, no limit of open files',1,3),(154,'stateful server','servers maintain state information about clients between requests',1,3),(155,'Unix Semantics','- total ordering of R/W events\n- easy to achieve in a non-distributed system\n- in a distributed system with one server and multiple clients with no caching at client, total ordering is also easily achieved since R and W are immediately performed at server',1,3),(156,'Session Semantics','- writes are guaranteed to become visible only when the file is closed\n- allow caching at client with lazy updating -> better performance\n- if two or more clients simultaneously write: one file (last one or non-deterministically) replaces the other',1,3),(157,'Immutable files','- create and read file operations (no write)\n- writing a file means to create a new one and enter it into the directory replacing the previous one with the same name: atomic operations\n- collision in writing: last copy or non deterministically',1,3),(158,'Transaction semantics','- mutual exclusion on file accesses; either all file operations are completed or none is\n- Good for banking systems',1,3),(159,'Aspects of stateful server','- shorter messages\n- better performance (info in memory until close)\n- open/close at server\n- file locking possible\n- read ahead possible',1,3),(160,'Where to cache?','server\'s memory, client\'s disk, client\'s memory',1,3),(161,'Caching in server\'s memory','- avoids disk access but still have network access\n- eliminates coherence problem',1,3),(162,'Caching at client\'s disk (if available)','tradeoff between disk access and remote memory access',1,3),(163,'Caching at client in main memory','- inside each process address space: no sharing at client\n- in the kernel: kernel involvement on hits\n- in a separate user-level cache manager: flexible and efficient if paging/sharing can be controlled from user-level',1,3),(164,'How to maintain coherence of copies of the same file at various clients?','- write-through\n- delayed write\n- write-on-close\n- central control',1,3),(165,'Write-through','writes sent to the server as soon as they are\nperformed at the client -> high traffic, requires cache managers to check (modification time) with server before can provide cached content to any client',1,3),(166,'Delayed write','coalesces multiple writes; better performance but ambiguous semantics',1,3),(167,'Write-on-close','implements session semantics',1,3),(168,'Central control','file server keeps a directory of open/cached files\nat clients and sends invalidations -> Unix semantics, but problems with robustness and scalability',1,3),(169,'Why multiple copies are maintained on a separate file server?','- Increase availability: file accessible even if a server is down\n- Increase reliability: file accessible even if a server loses its copy\n- Improve scalability: reduce the contention by splitting the workload over multiple servers',1,3),(170,'Distributed algorithms','- Happened-before relation\n- Distributed mutual exclusion\n- Distributed elections\n- Distributed deadlock prevention and avoidance\n- Distributed deadlock detection',1,3);
/*!40000 ALTER TABLE `flash_cards` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `folders`
--

DROP TABLE IF EXISTS `folders`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `folders` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(60) NOT NULL,
  `user_id` int DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `folders`
--

LOCK TABLES `folders` WRITE;
/*!40000 ALTER TABLE `folders` DISABLE KEYS */;
/*!40000 ALTER TABLE `folders` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `folders_and_sets`
--

DROP TABLE IF EXISTS `folders_and_sets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `folders_and_sets` (
  `folder_id` int DEFAULT NULL,
  `set_id` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `folders_and_sets`
--

LOCK TABLES `folders_and_sets` WRITE;
/*!40000 ALTER TABLE `folders_and_sets` DISABLE KEYS */;
/*!40000 ALTER TABLE `folders_and_sets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sets`
--

DROP TABLE IF EXISTS `sets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sets` (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` varchar(60) NOT NULL,
  `description` varchar(200) DEFAULT NULL,
  `user_id` int DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sets`
--

LOCK TABLES `sets` WRITE;
/*!40000 ALTER TABLE `sets` DISABLE KEYS */;
INSERT INTO `sets` VALUES (1,'History of Computers','Useful text describing the contents of this study set. This study set will help you improve your skills in whatever subject it may concern. This is placeholder text for styling purposes.',1),(2,'The League of Nations','Useful text describing the contents of this study set. This study set will help you improve your skills in whatever subject it may concern. This is placeholder text for styling purposes.',1),(3,'Distributed systems','Useful text describing the contents of this study set. This study set will help you improve your skills in whatever subject it may concern. This is placeholder text for styling purposes.',1);
/*!40000 ALTER TABLE `sets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `subjects`
--

DROP TABLE IF EXISTS `subjects`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `subjects` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(40) NOT NULL,
  `set_id` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `subjects`
--

LOCK TABLES `subjects` WRITE;
/*!40000 ALTER TABLE `subjects` DISABLE KEYS */;
/*!40000 ALTER TABLE `subjects` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `id` int NOT NULL AUTO_INCREMENT,
  `username` varchar(60) NOT NULL,
  `email` varchar(60) DEFAULT NULL,
  `password` varchar(20) NOT NULL,
  `first_name` varchar(40) DEFAULT NULL,
  `last_name` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'admin','admin@email.com','admin','admin','admin');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-05-02 19:20:00
